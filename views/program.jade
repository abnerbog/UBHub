doctype html
include mixins

html
    head
        style.
        link(rel='stylesheet', href='/stylesheets/style.css')
        script(type='text/javascript' src='/javascripts/model.js')
        script.
            let dataFromServer = !{programData};
            let program;
            window.onload = function() {
                console.log(dataFromServer);
                program = new model.Program();
                program.create(dataFromServer);
                console.log(program);

                const form = document.getElementById('form');
                form.action = '/program/submit';
                form.method = 'POST';
                form.onsubmit = function (event) {
                    event.preventDefault();
                    const name = document.getElementsByClassName('nameInput').item(0).value;
                    const year = document.getElementsByClassName('yearInput').item(0).value;
                    const data ={'header': {'year':year, 'name':name}, 'values':{}};
                    data.values = Object.fromEntries(new FormData(event.target).entries())
                    console.log(data);
                    const stringifiedData = JSON.stringify(data);
                    console.log(stringifiedData);

                    const xmlHttp = new XMLHttpRequest();
                    xmlHttp.onreadystatechange = function () {
                        if (xmlHttp.readyState == 4 && xmlHttp.status == 200)
                            console.log(xmlHttp.responseText);
                    }
                    xmlHttp.open("POST", '/program/submit/', true); // true for asynchronous
                    xmlHttp.setRequestHeader("Content-Type", "application/json; charset=utf-8");
                    xmlHttp.send(stringifiedData);

                    return false;
                }

                for (let i = 0; i < program.categories.length; i += 1) {
                    let category = document.createElement('div');
                    category.style = 'margin:10px;';
                    category.textContent = program.categories[i].categoryName;

                    for (let j = 0; j < program.categories[i].indicators.length; j += 1) {
                        let indicator = createIndicatorEntry(program.categories[i].indicators[j]);

                        indicator.style = 'margin-left:10px;';
                        category.append(indicator);
                    }
                    form.append(category);
                }

                const submitButton = document.createElement('input');
                submitButton.setAttribute('type', 'submit');
                submitButton.setAttribute('value', 'Submit');
                submitButton.textContent = 'submit';
                form.append(submitButton);
            }

            function createIndicatorEntry(indicator) {
                if(indicator.archetype == 'boolean') {
                    const hiddenOffButton = document.createElement('input');
                    hiddenOffButton.type = 'hidden';
                    hiddenOffButton.name = indicator.id;
                    hiddenOffButton.value = 0;

                    const checkbox = document.createElement('input');
                    checkbox.type = 'checkbox';
                    checkbox.name = indicator.id;
                    checkbox.addEventListener('change', event => {
                        hiddenOffButton.value = checkbox.checked ? 1 : 0;
                    });
                    // if(indicator.required || true) {
                    //     checkbox.required = true; //todo: problem - this requirement makes it required to be checked...
                    // }

                    const checkboxLabel = document.createElement('label');
                    checkboxLabel.textContent = indicator.indicatorName;

                    const checkboxAndLabel = document.createElement('div');

                    checkboxAndLabel.append(checkbox);
                    checkboxAndLabel.append(hiddenOffButton);
                    checkboxAndLabel.append(checkboxLabel);
                    return checkboxAndLabel;
                }

                if(indicator.archetype == 'float') {
                    const input = document.createElement('input');
                    input.type = 'number';
                    input.step = 0.001;
                    input.name = indicator.id;

                    const label = document.createElement('label');
                    label.textContent = indicator.indicatorName;

                    const inputAndLabel = document.createElement('div');
                    inputAndLabel.append(input);
                    inputAndLabel.append(label);

                    return inputAndLabel;
                }

                const label = document.createElement('div');
                label.textContent = indicator.indicatorName;
                return label;
            }

body
    +header(true)

    div(class='spaceAbove')

    div(style='margin-left:10px;')
        div
            div name
            input(type='' class='nameInput' style='margin-left:10px;')

        div
            div year
            input(type='' class='yearInput' style='margin-left:10px;')

        form(id='form')

    //div(class='button spaceAbove' onclick='console.log(program);') Save Program Instance
